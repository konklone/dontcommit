#!/usr/bin/env ruby

# Git pre-commit hook for watching for DONTCOMMIT slugs.
#
# To intentionally ignore the hook (i.e., when adding an alert call), commit
# from the command line with "--no-verify"
#
# By Eric Mill (@konklone, eric@konklone.com),
# forked from the work of Bob Gilmore (dev@bobgilmore.name).
#
# https://github.com/konklone/githooks

FORBIDDEN = [
  /DONTCOMMIT/, # I use #DONTCOMMIT for debug/test stuff
]

# Loop over ALL errors and warnings and return ALL problems.
# I want to report on *all* problems that exist in the commit before aborting,
# so that anyone calling --no-verify has been informed of all problems first.
error_found = false

full_diff = `git diff --cached --`

full_diff.scan(%r{^\+\+\+ b/(.+)\n@@.*\n([\s\S]*?)(?:^diff|\z)}).each do |file, diff|
  changed_code_for_file = diff.split("\n").select { |x| x.start_with?("+") }.join("\n")
  changed_lines_for_file = diff.split("\n").select { |x| x.start_with?("+") }
  dir = File.dirname(file)

  # Scan for "forbidden" calls
  FORBIDDEN.each do |re|
    if changed_code_for_file.match(re)
      puts %{Error: git pre-commit hook forbids committing "#{$1 || $&}" to #{file}\n--------------}
      error_found = true
    end
  end
end

# Finally, report errors
if error_found
  puts "To commit anyway, use --no-verify"
  exit 1
end
